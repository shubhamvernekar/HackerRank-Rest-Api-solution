center approach o(n^2)

class Solution {
    public String longestPalindrome(String s) {
        int start = 0, end = 0;
        
        for(int i = 0; i < s.length(); i++) {
            int len = isPalindrome(s, i, i);
            int len1 = isPalindrome(s, i, i+1);
            len = Math.max(len, len1);

            if(end - start+1 < len) {
                start = i - (len-1)/2;
                end = i + (len)/2;
            }
        }
        return s.substring(start, end+1);
    }
    
    private int isPalindrome(String str, int s, int e) {
        while(s >= 0 && e < str.length() && str.charAt(s) == str.charAt(e)) {
            s--;
            e++;
        }
        return e-s-1;
    }
}

